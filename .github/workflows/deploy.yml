name: Terraform Deploy

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    env:
      ARM_USE_OIDC: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (service principal JSON)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (PR)
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -out=tfplan.out | tee plan.txt

      - name: Upload Plan Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            plan.txt
            tfplan.out
          retention-days: 14

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message-id: tf-plan
          message: |
            **Terraform Plan**:
            ```
            ${{ steps.plan.outputs.stdout || '' }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Plan (main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -no-color -out=tfplan.out

      - name: Terraform Apply (main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan.out

      - name: Upload Terraform State
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: tfstate-main
          path: |
            terraform.tfstate
            terraform.tfstate.backup
          retention-days: 30

      # BONUS iz zadatka: post-deploy sample HTML na Web App
      - name: Deploy Sample Web Page
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          RG_NAME=$(terraform output -raw resource_group_name)
          APP_NAME=$(terraform output -raw web_app_name)
          echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>OK</title></head><body><h1>Pozdrav iz Terraform-a ðŸ‘‹</h1><p>App je privatan i dostupan samo iz VNet-a.</p></body></html>" > index.html
          zip site.zip index.html
          az webapp deployment source config-zip --resource-group "$RG_NAME" --name "$APP_NAME" --src-path site.zip
